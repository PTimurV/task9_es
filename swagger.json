{
	"swagger": "2.0",
	"info": {
		"version": "1.0.0",
		"title": "User and Car API",
		"description": "API for managing users and cars"
	},
	"host": "localhost:3000",
	"basePath": "/",
	"schemes": ["http"],
	"paths": {
		"/users": {
			"get": {
				"summary": "Get all users",
				"responses": {
					"200": {
						"description": "List of users",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/User"
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new user",
				"parameters": [
					{
						"name": "user",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				],
				"responses": {
					"201": {
						"description": "User created"
					},
					"400": {
						"description": "Invalid input"
					}
				}
			}
		},
		"/users/{id}": {
			"get": {
				"summary": "Get user by ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "User found",
						"schema": {
							"$ref": "#/definitions/User"
						}
					},
					"404": {
						"description": "User not found"
					}
				}
			},
			"put": {
				"summary": "Update user",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "user",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/User"
						}
					}
				],
				"responses": {
					"200": {
						"description": "User updated"
					},
					"400": {
						"description": "Invalid input"
					},
					"404": {
						"description": "User not found"
					}
				}
			},
			"delete": {
				"summary": "Delete user",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"204": {
						"description": "User deleted"
					},
					"404": {
						"description": "User not found"
					}
				}
			}
		},
		"/users/age/{age}": {
			"get": {
				"summary": "Get users by age",
				"parameters": [
					{
						"name": "age",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "List of users older than the specified age",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/User"
							}
						}
					}
				}
			}
		},
		"/users/domain/{domain}": {
			"get": {
				"summary": "Get users by email domain",
				"parameters": [
					{
						"name": "domain",
						"in": "path",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "List of users with the specified email domain",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/User"
							}
						}
					}
				}
			}
		},
		"/cars": {
			"get": {
				"summary": "Get all cars",
				"responses": {
					"200": {
						"description": "List of cars",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Car"
							}
						}
					}
				}
			},
			"post": {
				"summary": "Create a new car",
				"parameters": [
					{
						"name": "car",
						"in": "body",
						"required": true,
						"schema": {
							"$ref": "#/definitions/Car"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Car created"
					},
					"400": {
						"description": "Invalid input"
					}
				}
			}
		},
		"/cars/user/{id}": {
			"get": {
				"summary": "Get all cars by user ID",
				"parameters": [
					{
						"name": "id",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "List of cars",
						"schema": {
							"type": "array",
							"items": {
								"$ref": "#/definitions/Car"
							}
						}
					}
				}
			}
		},
		"/cars/user/{userId}/{carId}": {
			"get": {
				"summary": "Get car by user ID and car ID",
				"parameters": [
					{
						"name": "userId",
						"in": "path",
						"required": true,
						"type": "integer"
					},
					{
						"name": "carId",
						"in": "path",
						"required": true,
						"type": "integer"
					}
				],
				"responses": {
					"200": {
						"description": "Car found",
						"schema": {
							"$ref": "#/definitions/Car"
						}
					},
					"404": {
						"description": "Car not found"
					}
				}
			}
		}
	},
	"definitions": {
		"User": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"name": {
					"type": "string"
				},
				"email": {
					"type": "string"
				},
				"age": {
					"type": "integer"
				}
			}
		},
		"Car": {
			"type": "object",
			"properties": {
				"id": {
					"type": "integer"
				},
				"brand": {
					"type": "string"
				},
				"model": {
					"type": "string"
				},
				"year": {
					"type": "integer"
				},
				"userId": {
					"type": "integer"
				}
			}
		}
	}
}
